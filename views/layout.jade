doctype html
html
  head
    if locals.title
      title= title
    else
      title New Sails App

    // Viewport mobile tag for sensible mobile support
    meta(name="viewport",content="width=device-width, initial-scale=1, maximum-scale=1")

    //-
      Stylesheets and Preprocessors
      ==============================

      You can always bring in CSS files manually with `<link>` tags, or asynchronously
      using a solution like AMD (RequireJS).  Or, if you like, you can take advantage
      of Sails' conventional asset pipeline (boilerplate Gruntfile).

      By default, stylesheets from your `assets/styles` folder are included
      here automatically (between STYLES and STYLES END). Both CSS (.css) and LESS (.less)
      are supported. In production, your styles will be minified and concatenated into
      a single file.

      To customize any part of the built-in behavior, just edit `tasks/pipeline.js`.
      For example, here are a few things you could do:

          + Change the order of your CSS files
          + Import stylesheets from other directories
          + Use a different or additional preprocessor, like SASS, SCSS or Stylus

    // STYLES
    link(rel="stylesheet", href="/styles/foundation/foundation.css")
    link(rel="stylesheet", href="/styles/foundation/normalize.css")
    link(rel="stylesheet", href="/styles/a-common.css")
    link(rel="stylesheet", href="/styles/advertising.css")
    link(rel="stylesheet", href="/styles/consulting.css")
    link(rel="stylesheet", href="/styles/contact.css")
    link(rel="stylesheet", href="/styles/creative.css")
    link(rel="stylesheet", href="/styles/home.css")
    link(rel="stylesheet", href="/styles/insights.css")
    link(rel="stylesheet", href="/styles/mapbox.css")
    link(rel="stylesheet", href="/styles/technology.css")
    link(rel="stylesheet", href="/styles/z-mobile.css")
    // STYLES END

    block styles

  body(class=bodyClass ? bodyClass : '')
    block body

    div(class='footer row')
      div(class='small-8 medium-8 large-8 columns')
        .copyright-info
          | UITOUX Inc. All rights reserved

      div(class='small-4 medium-4 large-4 columns')
        .secondary-menu
          ul
            - list = ["About", "Contact"]
              each item in list
                li.primary-link= item

    //-
      Client-side Templates
      ========================

      HTML templates are important prerequisites of modern, rich client applications.
      To work their magic, frameworks like Backbone, Angular, Ember, and Knockout require
      that you load these templates client-side.

      By default, your Gruntfile is configured to automatically load and precompile
      client-side JST templates in your `assets/templates` folder, then
      include them here automatically (between TEMPLATES and TEMPLATES END).

      To customize this behavior to fit your needs, just edit `tasks/pipeline.js`.
      For example, here are a few things you could do:

          + Import templates from other directories
          + Use a different template engine (handlebars, jade, dust, etc.)
          + Internationalize your client-side templates using a server-side
            stringfile before they're served.

    // TEMPLATES
    
    // TEMPLATES END

    //-
      Client-side Javascript
      ========================

      You can always bring in JS files manually with `script` tags, or asynchronously
      on the client using a solution like AMD (RequireJS).  Or, if you like, you can
      take advantage of Sails' conventional asset pipeline (boilerplate Gruntfile).

      By default, files in your `assets/js` folder are included here
      automatically (between SCRIPTS and SCRIPTS END).  Both JavaScript (.js) and
      CoffeeScript (.coffee) are supported. In production, your scripts will be minified
      and concatenated into a single file.

      To customize any part of the built-in behavior, just edit `tasks/pipeline.js`.
      For example, here are a few things you could do:

          + Change the order of your scripts
          + Import scripts from other directories
          + Use a different preprocessor, like TypeScript

    // SCRIPTS
    script(src="/js/dependencies/jquery.min.js")
    script(src="/js/dependencies/underscore-min.js")
    script(src="/js/dependencies/backbone-min.js")
    script(src="/js/dependencies/jquery.cookie.js")
    script(src="/js/dependencies/fastclick.js")
    script(src="/js/dependencies/placeholder.js")
    script(src="/js/dependencies/modernizr.js")
    script(src="/js/dependencies/sails.io.js")
    script(src="/js/dependencies/foundation.min.js")
    script(src="/js/dependencies/foundation/foundation.abide.js")
    script(src="/js/dependencies/foundation/foundation.accordion.js")
    script(src="/js/dependencies/foundation/foundation.alert.js")
    script(src="/js/dependencies/foundation/foundation.clearing.js")
    script(src="/js/dependencies/foundation/foundation.dropdown.js")
    script(src="/js/dependencies/foundation/foundation.equalizer.js")
    script(src="/js/dependencies/foundation/foundation.interchange.js")
    script(src="/js/dependencies/foundation/foundation.joyride.js")
    script(src="/js/dependencies/foundation/foundation.magellan.js")
    script(src="/js/dependencies/foundation/foundation.offcanvas.js")
    script(src="/js/dependencies/foundation/foundation.orbit.js")
    script(src="/js/dependencies/foundation/foundation.reveal.js")
    script(src="/js/dependencies/foundation/foundation.slider.js")
    script(src="/js/dependencies/foundation/foundation.tab.js")
    script(src="/js/dependencies/foundation/foundation.tooltip.js")
    script(src="/js/dependencies/foundation/foundation.topbar.js")
    script(src="/js/dependencies/mapbox.js")
    script(src="/js/map.js")
    // SCRIPTS END

